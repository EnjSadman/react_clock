{"version":3,"sources":["components/Clock.tsx","components/ClockName.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","timerId","this","setInterval","date","Date","setState","toLocaleTimeString","clearInterval","id","style","display","React","Component","ClockName","clockName","props","name","console","log","prevProps","App","isClockVisible","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAEaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAFV,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,IAAMC,EAAO,IAAIC,KAEjB,EAAKC,SAAS,CAAEN,KAAMI,EAAKG,yBAC1B,OAZP,kCAeE,WACML,KAAKD,SACPO,cAAcN,KAAKD,WAjBzB,oBAqBE,WACE,OACE,oBACEQ,GAAG,QACHC,MAAO,CAAEC,QAAS,SAFpB,0BAKG,IALH,UAMMT,KAAKH,MAAMC,aA7BvB,GAA2BY,IAAMC,WCIpBC,EAAb,4MACEf,MAAQ,CACNgB,UAAW,EAAKC,MAAMC,MAF1B,uDAKE,WACEC,QAAQC,IAAR,+BAAoCjB,KAAKH,MAAMgB,cANnD,gCASE,SAAmBK,GACjBF,QAAQC,IAAR,4BAAiCC,EAAUH,KAA3C,eAAsDf,KAAKc,MAAMC,SAVrE,oBAaE,WACE,MAAQ,OAdZ,GAA+BL,IAAMC,WCA/BQ,E,4MACJtB,MAAQ,CACNuB,gBAAgB,EAChBP,UAAWQ,KAAKC,MAAsB,GAAhBD,KAAKE,W,4CAG7B,WAAU,IAAD,OACCH,EAAmBpB,KAAKH,MAAxBuB,eAER,OACE,sBACEI,UAAU,MADZ,UAGE,6CACCJ,GACC,cAAC,EAAD,IAEF,wBACEK,KAAK,SACLC,QAAS,WACP,EAAKtB,SAAS,CAAEgB,gBAAgB,KAHpC,kBAQA,wBACEK,KAAK,SACLC,QAAS,WACP,EAAKtB,SAAS,CAAEgB,gBAAgB,KAHpC,kBAQA,wBACEK,KAAK,SACLC,QAAS,WACP,EAAKtB,SAAS,CAAES,UAAWQ,KAAKC,MAAsB,GAAhBD,KAAKE,aAH/C,yBAQA,cAAC,EAAD,CAAWR,KAAMf,KAAKH,MAAMgB,mB,GAzClBH,IAAMC,WA+CTQ,IClDfQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a994235b.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Clock extends React.Component {\n  state = {\n    time: '',\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date = new Date();\n\n      this.setState({ time: date.toLocaleTimeString() });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <p\n        id=\"clock\"\n        style={{ display: 'block' }}\n      >\n        Current time:\n        {' '}\n        {`${this.state.time}`}\n      </p>\n    );\n  }\n}\n","import React from 'react';\n\ninterface Props {\n  name: number;\n}\n\nexport class ClockName extends React.Component<Props> {\n  state = {\n    clockName: this.props.name,\n  };\n\n  componentDidMount() {\n    console.log(`start name for clock ${this.state.clockName}`);\n  }\n\n  componentDidUpdate(prevProps : Props) {\n    console.log(`name changed from ${prevProps.name} to ${this.props.name}`);\n  }\n\n  render() {\n    return ('');\n  }\n}\n","/* eslint-disable class-methods-use-this */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\nimport { ClockName } from './components/ClockName';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.floor(Math.random() * 10),\n  };\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div\n        className=\"App\"\n      >\n        <h1>React clock</h1>\n        {isClockVisible && (\n          <Clock />\n        )}\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n        >\n          Show\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n        >\n          Hide\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ clockName: Math.floor(Math.random() * 10) });\n          }}\n        >\n          Random Name\n        </button>\n        <ClockName name={this.state.clockName} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}