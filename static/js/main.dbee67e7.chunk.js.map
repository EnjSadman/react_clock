{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","timerId","this","setInterval","date","Date","setState","toLocaleTimeString","prevProps","clockName","props","console","log","clearInterval","id","style","display","React","Component","App","isClockVisible","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAMaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAFV,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,IAAMC,EAAO,IAAIC,KAEjB,EAAKC,SAAS,CAAEN,KAAMI,EAAKG,yBAC1B,OAZP,gCAeE,SAAmBC,GACbA,EAAUC,YAAcP,KAAKQ,MAAMD,UACrCE,QAAQC,IAAR,4BAAiCJ,EAAUC,UAA3C,eAA2DP,KAAKQ,MAAMD,YAEtEE,QAAQC,IAAIV,KAAKH,MAAMC,QAnB7B,kCAuBE,WACME,KAAKD,SACPY,cAAcX,KAAKD,WAzBzB,oBA6BE,WACE,OACE,oBACEa,GAAG,QACHC,MAAO,CAAEC,QAAS,SAFpB,0BAKG,IALH,UAMMd,KAAKH,MAAMC,aArCvB,GAA2BiB,IAAMC,WCD3BC,E,4MACJpB,MAAQ,CACNqB,gBAAgB,EAChBX,UAAWY,KAAKC,MAAsB,GAAhBD,KAAKE,W,4CAG7B,WAAU,IAAD,OACCH,EAAmBlB,KAAKH,MAAxBqB,eAER,OACE,sBACEI,UAAU,MADZ,UAGE,6CACCJ,GACC,cAAC,EAAD,CAAOX,UAAWP,KAAKH,MAAMU,YAE/B,wBACEgB,KAAK,SACLC,QAAS,WACP,EAAKpB,SAAS,CAAEc,gBAAgB,KAHpC,kBAQA,wBACEK,KAAK,SACLC,QAAS,WACP,EAAKpB,SAAS,CAAEc,gBAAgB,KAHpC,kBAQA,wBACEK,KAAK,SACLC,QAAS,WACP,EAAKpB,SAAS,CAAEG,UAAWY,KAAKC,MAAsB,GAAhBD,KAAKE,aAH/C,gC,GAjCUN,IAAMC,WA8CTC,IChDfQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dbee67e7.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  clockName: number;\n}\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    time: '',\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date = new Date();\n\n      this.setState({ time: date.toLocaleTimeString() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps : Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      console.log(`name changed from ${prevProps.clockName} to ${this.props.clockName}`);\n    } else {\n      console.log(this.state.time);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <p\n        id=\"clock\"\n        style={{ display: 'block' }}\n      >\n        Current time:\n        {' '}\n        {`${this.state.time}`}\n      </p>\n    );\n  }\n}\n","/* eslint-disable class-methods-use-this */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.floor(Math.random() * 10),\n  };\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div\n        className=\"App\"\n      >\n        <h1>React clock</h1>\n        {isClockVisible && (\n          <Clock clockName={this.state.clockName} />\n        )}\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n        >\n          Show\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n        >\n          Hide\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ clockName: Math.floor(Math.random() * 10) });\n          }}\n        >\n          Random Name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}